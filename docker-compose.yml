version: '3'

services:
  adminrd-web:
    container_name: adminrd-web
    restart: unless-stopped
    build:
      context: .
      args:
        - APP_USER_UID=${USER_UID}
        - APP_USER_GID=${USER_GID}
    user: ${USER_UID}:${USER_GID}
    depends_on:
      - adminrd-db
    environment:
      DB_USER: ${DB_USER}
      DB_PW: ${DB_PW}
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      SITE_NAME: adminrd.labs.vu.nl
      SECRET: ${SECRET}
    command: gunicorn adminrd.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - /docker/adminrd/log:/usr/app/log

  adminrd-task:
    container_name: adminrd-task
    restart: unless-stopped
    build:
      context: .
      args:
        - APP_USER_UID=${USER_UID}
        - APP_USER_GID=${USER_GID}
    user: ${USER_UID}:${USER_GID}
    depends_on:
      - adminrd-db
    environment:
      DB_USER: ${DB_USER}
      DB_PW: ${DB_PW}
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DATADIR: /data
      SITE_NAME: adminrd.labs.vu.nl
      SECRET: ${SECRET}
    command: python manage.py qcluster
    volumes:
      - /docker/adminrd/log:/usr/app/log
      - ${DATASRC}:/data:rw

  adminrd-db:
    container_name: ${DB_HOST}
    image: postgres:14
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${DB_PW}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - /docker/adminrd/db:/var/lib/postgresql/data

  nginx:
    image: nginx:latest
    restart: unless-stopped
    depends_on:
      - adminrd-web
    container_name: nginx
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./static:/static:ro  # for syncing with django source code
      - /docker/adminrd/nginx_conf:/etc/nginx/conf.d:ro
      - /home/acme:/acme:ro